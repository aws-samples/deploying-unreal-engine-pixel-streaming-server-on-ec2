{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Unreal Engine 4 Pixel Streaming on AWS Solution",
  "Parameters": {
    "KeyPairName": {
      "Description": "Keypair associated with the EC2 instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "ConstraintDescription": "Must provide a keypair to be associated with the EC2 instance"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "g4dn.4xlarge",
      "AllowedValues": [
        "g3s.xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "g3.16xlarge",
        "g4dn.xlarge",
        "g4dn.2xlarge",
        "g4dn.4xlarge",
        "g4dn.8xlarge",
        "g4dn.12xlarge",
        "g4dn.16xlarge"
      ]
    },
    "DiskSize" : {
        "Description": "Disk size in GB",
        "Type": "Number",
        "Default": "50",
        "MinValue": "30"
    },
    "UserPasswd": {
      "Description": "Password for the \"Administrator\" user on Windows instances. The default password is Ch4ng3M3! ",
      "Default": "Ch4ng3M3!",
      "MinLength": "8",
      "Type": "String",
      "AllowedPattern": "^((?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])|(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_])|(?=.*[a-z])(?=.*[\\d])(?=.*[\\W_])|(?=.*[A-Z])(?=.*[\\d])(?=.*[\\W_])).+$",
      "ConstraintDescription": "Password must contain at least one element from three of the following sets: lowercase letters, uppercase letters, base 10 digits, non-alphanumeric characters",
      "NoEcho" : "true"
    },
    "OsVersion": {
      "Type": "String",
      "AllowedValues": [
        "WindowsServer2016",
        "WindowsServer2019"
      ],
      "Default": "WindowsServer2019"
    },
    "PixelStreamingAccessCIDR": {
      "Description": "CIDR Block from which the Pixel Streaming Server will be accessible.",
      "Default": "0.0.0.0/0",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-32"
    },
    "NiceDCVAccessCIDR": {
      "Description": "CIDR Block from which the NICE DCV Remote Desktop will be accessible.",
      "Default": "0.0.0.0/0",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-32"
    },
    "PixelStreamerBuildLocation": {
      "Type": "String",
      "Description": "Location of zip file of UE4 Pixel Streaming exported project. Format of https://bucket-name.region.amazonaws.com/Path/UE4PixelStreamingProject.zip"
    },
    "PixelStreamerBootstrapLocation": {
      "Type": "String",
      "Description": "Location of bootstrap Powershell script. Format of https://bucket-name.region.amazonaws.com/Path/UE4-Pixel-Streamer-Bootstrap.ps1"
    },
    "LatestWindows2019AmiId":{
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"
    },
    "LatestWindows2016AmiId":{
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base"
    }
  },
  "Mappings": {
    "VersionMap": {
      "firefox": {
        "default": "Firefox_Setup_57.0.exe"
      }
    }
  },
  "Conditions": {
    "IsWindows2019": { "Fn::Equals": [{"Ref" : "OsVersion"}, "WindowsServer2019"] },
    "IsWindows2016": { "Fn::Equals": [{"Ref" : "OsVersion"}, "WindowsServer2016"] },
    "CreateWindows" : { 
      "Fn::Or" : [ 
        { "Condition" : "IsWindows2019" }, 
        { "Condition" : "IsWindows2016" }
      ]
    }
  },
  "Resources": {
    "WindowsInstance": {
      "Type": "AWS::EC2::Instance",
      "Condition" : "CreateWindows",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "RootInstanceProfile"
        },
        "ImageId": {
          "Fn::If": [
            "IsWindows2019", 
            {"Ref": "LatestWindows2019AmiId"}, 
            {
              "Fn::If": [
                "IsWindows2016", 
                {"Ref": "LatestWindows2016AmiId"},
				{"Ref": "LatestWindows2016AmiId"}
              ]
            }
          ]
        },
        "SecurityGroupIds": [{
          "Ref": "DCVSecurityGroup"
        }],
        "Tags" : [
          { 
            "Key" : "RemoteVisualization",
            "Value" : "DCV-preview"
          },
          { 
            "Key" : "Name",
            "Value" : { "Ref": "AWS::StackName" }
          },
          { 
            "Key" : "DCV",
            "Value" : "DCV"
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sda1",
            "Ebs" : {
              "VolumeSize" : {
                "Ref" : "DiskSize"
              },
              "VolumeType" : "gp2"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v ",
                " -c initialize ",
                " -r WindowsInstance ",
                " --region ", { "Ref": "AWS::Region" },
                " -s ", { "Ref": "AWS::StackName" },
                "\n",
                "</script>\n"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "S3AccessCreds": {
            "type": "S3",
            "roleName": {
              "Ref": "RootRole"
            }
          }
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "initialize": [
              "download",
              "install",
              "restart"
            ]
          },
          "download": {
            "files": {
              "C:\\PixelStreamer\\Downloads\\UE4-Pixel-Streamer-Bootstrap.ps1": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      { "Ref": "PixelStreamerBootstrapLocation" }
                    ]
                  ]
                },
                "authentication": "S3AccessCreds"
              },              
              "C:\\PixelStreamer\\Downloads\\PixelStreamerProject.zip": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      { "Ref": "PixelStreamerBuildLocation" }
                    ]
                  ]
                },
                "authentication": "S3AccessCreds"
              },              
              "C:\\dcv-install\\install.ps1": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "https://s3-eu-west-1.amazonaws.com/nice-dcv-cfn/dcv-server-install.ps1"
                    ]
                  ]
                },
                "authentication": "S3AccessCreds"
              },
              "C:\\dcv-install\\conf.ps1": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "$dcvBucket = \"nice-dcv-cfn\"\r\n",
                      "$depBucket = \"nice-dcv-cfn\"\r\n",
                      "$devConPackage = \"DevCon.zip\"\r\n",
                      "$dcvPackageName = \"nice-dcv-server-x64-Release-2020.0-latest.msi\"\r\n",
                      "$firefoxPackage = \"", { "Fn::FindInMap": [ "VersionMap", "firefox", "default" ] }, "\"\r\n",
                      "$userName = \"Administrator\"\r\n",
                      "$userPasswd = \"", { "Ref": "UserPasswd" }, "\"\r\n",
                      "$logLevel = \"info\"\r\n",
                      "$waitHandle = \"", { "Ref": "InstanceWaitHandle" }, "\"\r\n",
                      "$windowsVersion = \"", { "Ref": "OsVersion" }, "\"\r\n"
                    ]
                  ]
                }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "c:\\cfn\\cfn-hup.conf",
                    "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                },
                "audiosrv": {
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            },
            "packages": {
              "msi": {
                "awscli": "https://s3.amazonaws.com/aws-cli/AWSCLI64.msi",
                "awstools": "http://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi"
              }
            }
          },
          "install": {
            "commands": {
              "install-dcv": {
                "command": "powershell.exe -noprofile -executionpolicy bypass C:\\dcv-install\\install.ps1 > C:\\dcv-install\\install.log",
                "waitAfterCompletion": "0",
                "ignoreErrors": "true"
              },
              "install-UE4-Pixel-Streaming": {
                "command": "powershell.exe -noprofile -executionpolicy bypass C:\\PixelStreamer\\Downloads\\UE4-Pixel-Streamer-Bootstrap.ps1 > C:\\PixelStreamer\\Downloads\\UE4-Pixel-Streamer-Bootstrap.log",
                "waitAfterCompletion": "0",
                "ignoreErrors": "true"
              }
            }
          },
          "restart": {
            "commands": {
              "restart": {
                "command": "shutdown /r /t 10 /d p:4:1 /c \"CloudFormation Restart\"",
                "waitAfterCompletion": "forever"
              }
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "e5cac32e-b5c6-46ba-9430-1f9b7275b5b6"
        }
      }
    },
    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6f9e3cf3-dc65-4bcc-a7aa-298486effe69"
        }
      }
    },
    "RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DcvInstallAccess",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:*",
                "s3:*"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::nice-dcv-cfn/*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "7160187f-0a7e-451f-bcb1-85783245c504"
        }
      }
    },
    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "a36c5fb2-26ae-49c8-bffb-628118f2cd10"
        }
      }
    },
    "WindowsInstanceWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Condition" : "CreateWindows",     
      "DependsOn": "WindowsInstance",
      "Properties": {
        "Handle": {
          "Ref": "InstanceWaitHandle"
        },
        "Timeout": "5400"
      }
    },
    "InstanceWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "DCVSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "DCV Security Group",
        "SecurityGroupIngress" : [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "NiceDCVAccessCIDR"}, "Description": "SSH Port"},
          {"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "NiceDCVAccessCIDR"}, "Description": "Remote Desktop Port"},
          {"IpProtocol": "tcp", "FromPort": "8443", "ToPort": "8443", "CidrIp": {"Ref": "NiceDCVAccessCIDR"}, "Description": "NICE DCV Port"},
          {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - Webserver Port"},
          {"IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - Secure Webserver Port"},
          {"IpProtocol": "tcp", "FromPort": "8888", "ToPort": "8888", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - Application Streaming Port"},
          {"IpProtocol": "udp", "FromPort": "8888", "ToPort": "8888", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - Application Streaming Port"},
          {"IpProtocol": "tcp", "FromPort": "19302", "ToPort": "19303", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - STUN/TURN Ports"},
          {"IpProtocol": "udp", "FromPort": "19302", "ToPort": "19303", "CidrIp": {"Ref": "PixelStreamingAccessCIDR"}, "Description": "UE4 Pixel Streamer - STUN/TURN Ports"}
        ]
      }
    }
  },
  "Outputs": {
    "WindowsInstanceId": {
      "Value": { "Ref": "WindowsInstance" },
      "Condition" : "CreateWindows",
      "Description": "Instance ID for the newly created EC2 instance"
    },
    "WindowsPublicDNS": {
      "Value": { "Fn::GetAtt": [ "WindowsInstance", "PublicDnsName" ] },      
      "Condition" : "CreateWindows",     
      "Description": "Web URL for Streaming Server, using DNS Name of the newly created EC2 instance"
    },
    "WindowsPublicIp": {
      "Value": { "Fn::GetAtt": [ "WindowsInstance", "PublicIp" ] },
      "Condition" : "CreateWindows",     
      "Description": "Public IP address of the newly created EC2 instance"
    },
    "WindowsDcvURL": {
      "Value": { "Fn::Join": [ "", [ "https://", { "Fn::GetAtt": [ "WindowsInstance", "PublicIp" ] }, ":8443" ] ] },
      "Condition" : "CreateWindows",     
      "Description": "Connection URL for web access to the newly created EC2 instance via NICE DCV"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default": "EC2" },
          "Parameters" : [ "InstanceType", "OsVersion", "DiskSize", "KeyPairName" ]
        },
        {
          "Label" : { "default": "Credentials" },
          "Parameters" : [ "UserPasswd" ]
        },
        {
          "Label" : { "default": "Pixel Streamer Properties" },
          "Parameters" : [ "PixelStreamerBootstrapLocation", "PixelStreamerBuildLocation", "PixelStreamingAccessCIDR", "NiceDCVAccessCIDR" ]
        },
        {
          "Label" : { "default": "Windows AMIs" },
          "Parameters" : [ "LatestWindows2019AmiId", "LatestWindows2016AmiId" ]
        }
      ],
      "ParameterLabels" : {
        "InstanceType": {"default": "Instance Type:"},
        "DiskSize": {"default": "Disk Size:"},
        "KeyPairName": {"default": "Key pair name:"},
        "UserPasswd": {"default": "Password:"},
        "OsVersion": {"default": "Operating System:"},
        "PixelStreamingAccessCIDR": {"default": "Pixel Streaming Access CIDR:"},
        "NiceDCVAccessCIDR": {"default": "NICE DCV Access CIDR:"},
        "PixelStreamerBuildLocation": {"default": "Pixel Streamer Build Location:"},
        "PixelStreamerBootstrapLocation": {"default": "Pixel Streamer Bootstrap Location:"},
        "LatestWindows2019AmiId": {"default": "Windows 2019 AMI:"},
        "LatestWindows2016AmiId": {"default": "Windows 2016 AMI:"}
      }
    }
  }
}
